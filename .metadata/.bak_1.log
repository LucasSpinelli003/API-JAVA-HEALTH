!SESSION 2023-11-21 14:53:32.565 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file C:\Users\lucas\OneDrive\Ambiente de Trabalho\learning\healthTec\.metadata\.bak_0.log
Created Time: 2023-11-21 17:18:24.713

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:24.714
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:28.113
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:28.114
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:28.115
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:28.161
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:28.162
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:28.162
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:29.628
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:29.629
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:29.629
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:29.943
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:29.944
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:29.944
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:39.993
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * ) – 5.4;
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:39.995
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:39.995
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:40.006
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * ) – 5.4;
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:40.006
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:40.006
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:40.713
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:40.713
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:40.714
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:42.478
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:42.554
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:42.555
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:43.485
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }esl
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:43.486
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:43.487
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:43.501
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }esl
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:43.501
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:43.502
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:45.025
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:45.026
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:45.027
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:45.255
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:45.256
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:45.257
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:45.946
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else()
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:45.947
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:45.948
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:46.240
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else(
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:46.241
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:46.241
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:46.251
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else(
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:46.251
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:46.252
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:47.637
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else[]
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:47.638
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:47.639
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:48.107
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else[
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:48.108
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:48.109
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:48.126
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else[
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:48.127
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:48.127
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:49.330
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:49.331
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:49.332
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:49.334
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:49.335
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:49.336
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:49.981
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:49.982
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:49.982
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:50.354
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:50.355
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:50.355
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:51.093
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	th
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:51.093
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:51.094
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:51.292
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	th
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:51.292
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:51.293
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:53.509
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:53.512
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:53.512
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:53.778
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw 
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:53.779
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:53.782
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:53.803
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw 
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:53.804
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:53.805
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:54.864
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new 
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:54.866
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:54.866
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:55.035
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new 
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:55.036
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:55.036
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:58.987
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new Gende
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:58.988
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:58.988
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:59.191
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new Gender
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:18:59.192
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:18:59.193
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:18:59.206
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new Gender
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:18:59.206
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:18:59.206
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:00.588
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNot
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:00.589
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:00.589
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:01.847
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFound
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:01.848
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:01.849
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:02.022
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFound
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:19:02.023
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:19:02.023
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:02.585
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundE
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:02.586
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:02.586
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:04.397
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:04.398
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:04.399
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:04.649
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:19:04.650
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:19:04.651
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:05.493
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException()
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:05.495
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:05.496
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:06.055
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("")
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:06.056
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:06.056
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:07.173
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:07.174
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:07.175
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:07.364
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:19:07.365
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:19:07.366
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:09.016
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:19:09.017
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:19:09.017
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:11.432
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O ");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:11.433
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:11.434
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:11.697
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O se");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:11.697
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O se");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:19:11.698
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:11.698
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:19:11.699
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:11.701
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:14.289
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser ");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:14.289
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:14.289
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:14.454
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser ap");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:14.455
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser ap");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:19:14.456
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:14.457
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:19:14.457
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:14.457
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:15.475
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser ap");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:19:15.476
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:19:15.476
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:16.466
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sex");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:16.467
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:16.468
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:16.711
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sex");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:19:16.712
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:19:16.712
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:19.953
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser ");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:19.954
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:19.955
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:20.562
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser F");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:20.564
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:20.564
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:20.779
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser F");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:19:20.780
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:19:20.781
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:22.328
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser 'F");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:22.329
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:22.330
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:23.913
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser 'F'");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:23.914
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:23.915
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:24.138
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser 'F' ");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:24.138
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:24.139
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:24.148
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser 'F' ");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:19:24.149
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:19:24.149
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:25.173
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser 'F' OU ");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:25.174
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:25.174
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:25.468
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser 'F' OU ");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:19:25.469
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:19:25.469
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:27.203
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser 'F' OU M");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:27.204
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:27.205
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:27.371
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser 'F' OU M");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-11-21 17:19:27.372
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-11-21 17:19:27.374
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:28.818
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser 'F' OU M'");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:28.819
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:28.820
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-11-21 17:19:29.492
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.EnderecoUsuario;
import br.com.healthsolu.model.Tmb;
import br.com.healthsolu.model.Usuario;

public class UsuarioDao {
	
	private Connection conn;
	
	public UsuarioDao(Connection conn) {
		super();
		this.conn = conn;
	}

	public void cadastrar(Usuario login) throws ClassNotFoundException, SQLException, BadInfoException {
		PreparedStatement stmm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet resultGet = stmm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		int id = 0;
	
		while (resultGet.next()) {
			Usuario loginGet = parse(resultGet);
			lista.add(loginGet);
		}
		if(lista.size() == 0) {
			 id = 1;
		}
		id = lista.size() + 1;
		
		PreparedStatement stm = conn.prepareStatement("INSERT INTO T_SIP_USUARIO (ID_USUARIO,ID_ENDERECO_USUARIO,"
				+ " NM_COMPLETO,IDADE,EMAIL,TELEFONE,NM_USUARIO,SENHA,PESO,ALTURA,GENERO,DATA_NASCIMENTO) "
				+ "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

		stm.setInt(1, id);
 		stm.setInt(2, login.getEnderecoUsuario().getId());
		stm.setString(3, login.getNome());
		stm.setInt(4, login.getIdade());
		stm.setString(5, login.getEmail());
		stm.setString(6, login.getTelefone());
		stm.setString(7, login.getNomeUsuario());
		stm.setString(8, login.getSenha());
		stm.setDouble(9, login.getPeso());
		stm.setDouble(10, login.getAltura());
		stm.setString(11, login.getSexo());
		stm.setObject(12, login.getDataNascimento());
		
		stm.executeUpdate();
	}
	
	private Usuario parse(ResultSet result) throws SQLException {
		int id = result.getInt("ID_USUARIO");
		int idEnderecoUsuario = result.getInt("ID_ENDERECO_USUARIO");
		String nome = result.getString("NM_COMPLETO");
		int idade = result.getInt("IDADE");
		String email = result.getString("EMAIL");
		String telefone = result.getString("TELEFONE");
		String nomeUsuario = result.getString("NM_USUARIO");
		String senha = result.getString("SENHA");
		double peso = result.getDouble("PESO");
		double altura = result.getDouble("ALTURA");
		String sexo = result.getString("GENERO");
		LocalDateTime dataNascimento = result.getObject("DATA_NASCIMENTO", LocalDateTime.class);
		
		Usuario usuario = new Usuario(id,nome,email,senha,idade,peso,sexo,altura,telefone,nomeUsuario,dataNascimento);
		
		if (idEnderecoUsuario != 0) {
			EnderecoUsuario enderecoUsuario = new EnderecoUsuario();
			enderecoUsuario.setId(idEnderecoUsuario);
			usuario.setEnderecoUsuario(enderecoUsuario);
		}
		
		return usuario;
	}
	
	public List<Usuario> listar() throws ClassNotFoundException, SQLException {

		PreparedStatement stm = conn.prepareStatement("select * from T_SIP_USUARIO");

		ResultSet result = stm.executeQuery();

		List<Usuario> lista = new ArrayList<Usuario>();

		while (result.next()) {
			Usuario login = parse(result);
			lista.add(login);
		}
		return lista;
	}
	
	public Usuario pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");

		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario login = parse(result);
		return login;
	}
	
	public double calculoTmb(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Endereco usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        
      
        if (usuario.getSexo().equalsIgnoreCase("M")) {
            double tmb = 88.362 + (13.397 * usuario.getPeso()) + (4.799 * usuario.getAltura()) - (5.677 * idade);
            return tmb;
        } else if (usuario.getSexo().equalsIgnoreCase("F")) {
            double tmb = 447.593 + (9.247 * usuario.getPeso()) + (3.098 * usuario.getAltura()) - (4.330 * idade);
            return tmb;
        }else {
        	throw new GenderNotFoundException("O sexo pode ser M ou F");
        }
	}
	public double calculoImc(int id) throws SQLException, IdNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuário não encontrado");
		}
		Usuario usuario = parse(result);
      
        double imc = usuario.getPeso()/(usuario.getAltura()*usuario.getAltura());
        
        return imc;
	}
	public double calculoPercentualGordura(int id) throws SQLException, IdNotFoundException, GenderNotFoundException {
		PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_usuario where id_usuario = ?");
		
		stm.setInt(1, id);

		ResultSet result = stm.executeQuery();

		if (!result.next()) {
			throw new IdNotFoundException("Usuario não encontrado");
		}
		Usuario usuario = parse(result);
		LocalDateTime dataNascimento = usuario.getDataNascimento();

        LocalDate dataAtual = LocalDate.now();

        int idade = Period.between(dataNascimento.toLocalDate(), dataAtual).getYears();
        if(usuario.getSexo().equalsIgnoreCase("M")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 1) – 5.4;
        }else if(usuario.getSexo().equalsIgnoreCase("F")) {
        	double bT = (1.20 * calculoImc(usuario.getId())) + (0.23 * idade) – (10.8 * 0) – 5.4;
        }else {
        	throw new GenderNotFoundException("O sexo só pode ser 'F' OU 'M'");
        }
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-11-21 17:19:29.493
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-11-21 17:19:29.493
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

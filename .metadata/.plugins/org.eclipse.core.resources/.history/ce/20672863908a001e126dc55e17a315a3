package br.com.healthsolu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Period;
import java.util.ArrayList;
import java.util.List;

import br.com.healthsolu.exception.BadInfoException;
import br.com.healthsolu.exception.GenderNotFoundException;
import br.com.healthsolu.exception.IdNotFoundException;
import br.com.healthsolu.model.Imc;
import br.com.healthsolu.model.Relatorio;
import br.com.healthsolu.model.Usuario;


	public class RelatorioDao {
	
		private Connection conn;
		
		
		public RelatorioDao(Connection conn) {
			super();
			this.conn = conn;
		}

				public void cadastrar(Relatorio relatorio) throws ClassNotFoundException, SQLException, BadInfoException, IdNotFoundException, GenderNotFoundException {
					PreparedStatement stmm = conn.prepareStatement("select * from t_sip_relatorio");

					ResultSet resultGet = stmm.executeQuery();

					List<Imc> lista = new ArrayList<Imc>();

					int id = 0;
				
					while (resultGet.next()) {
						Imc imcGet = parse(resultGet);
						lista.add(imcGet);
					}
					if(lista.size() == 0) {
						 id = 1;
					}
					id = lista.size() + 1;
					
					
					
					PreparedStatement stm = conn.prepareStatement("INSERT INTO t_sip_relatorio (id_relatorio, id_usuario,"
							+ "id_imc,id_tmb) "
							+ "values (?, ?, ?, ?)");

					stm.setInt(1, id);
					stm.setInt(2, relatorio.getUsuario().getId());
					stm.setDouble(3, relatorio.getResultadoImc());
					stm.setString(4, relatorio.getDoencasRelacionadas());
					stm.setString(5, relatorio.getPrevencaoDoencas());
					stm.setString(6, relatorio.getClassificacao());
					stm.setDouble(7, relatorio.getEstimativaPercGordura());
					
					stm.executeUpdate();
				}
				
				private Relatorio parse(ResultSet result) throws SQLException {	
					int id = result.getInt("id_relatorio");
					int id_usuario = result.getInt("id_usuario");
					int id_imc = result.getInt("id_imc");
					int id_tmb = result.getInt("id_tmb");
					
					Relatorio relatorio = new Relatorio(id);
					
					if (id_usuario != 0) {
						Usuario usuario = new Usuario();
						usuario.setId(id_usuario);
						relatorio.setUsuario(usuario);
					}
					if (id_imc != 0) {
						Imc imc = new Imc();
						imc.setId(id_imc);
						relatorio.setUsuario(usuario);
					}
					
					
					return relatorio;
				}
				
				public List<Imc> listar() throws ClassNotFoundException, SQLException {

					PreparedStatement stm = conn.prepareStatement("select * from t_sip_relatorio");

					ResultSet result = stm.executeQuery();

					List<Imc> lista = new ArrayList<Imc>();

					while (result.next()) {
						Imc imc = parse(result);
						lista.add(imc);
					}
					return lista;
				}
				public Imc pesquisar(int id) throws ClassNotFoundException, SQLException, IdNotFoundException {

					PreparedStatement stm = conn.prepareStatement("select * from" + " t_sip_relatorio where id_imc = ?");

					stm.setInt(1, id);

					ResultSet result = stm.executeQuery();

					if (!result.next()) {
						throw new IdNotFoundException("Imc n√£o encontrado");
					}
					Imc imc = parse(result);
					return imc;
				}
				

				
				
		
	}	


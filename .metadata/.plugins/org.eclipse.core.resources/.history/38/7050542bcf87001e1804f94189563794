package br.com.fiap.healthsolu.resource;

import java.sql.SQLException;
import java.util.List;

import br.com.fiap.healthsolu.service.LoginService;
import br.com.healthsolu.model.Login;
import jakarta.ws.rs.Consumes;
import jakarta.ws.rs.DELETE;
import jakarta.ws.rs.GET;
import jakarta.ws.rs.POST;
import jakarta.ws.rs.PUT;
import jakarta.ws.rs.Path;
import jakarta.ws.rs.PathParam;
import jakarta.ws.rs.Produces;
import jakarta.ws.rs.QueryParam;
import jakarta.ws.rs.core.Context;
import jakarta.ws.rs.core.MediaType;
import jakarta.ws.rs.core.Response;
import jakarta.ws.rs.core.Response.Status;
import jakarta.ws.rs.core.UriBuilder;
import jakarta.ws.rs.core.UriInfo;

@Path("/login") //http://localhost:8080/Solutech/api/contatoSegurado
public class LoginResource {
	
	private LoginService service;
	
	public LoginResource() throws ClassNotFoundException, SQLException {
		service = new LoginService();
	}
	
	//POST http://localhost:8080/Solutech/api/contatoSegurado/ (Cadastrar um produto)
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	public Response cadastrar(Login login, @Context UriInfo uri) throws ClassNotFoundException, SQLException {
		try {
			service.cadastrar(contatoSegurado);
			UriBuilder uriBuilder = uri.getAbsolutePathBuilder();
			uriBuilder.path(String.valueOf(contatoSegurado.getId()));
			return Response.created(uriBuilder.build()).build();
		} catch (BadInfoException e) {
			e.printStackTrace();
			//Retornar o status 400 bad request
			return Response.status(Status.BAD_REQUEST)
								.entity(e.getMessage()).build();
		}
	}




}
